{"version":3,"sources":["../../src/pages/invitations/invitations.module.ts","../../src/pages/invitations/invitations.ts"],"names":[],"mappings":"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","file":"4.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { InvitationsPage } from './invitations';\n@NgModule({\n  declarations: [InvitationsPage],\n  imports: [IonicPageModule.forChild(InvitationsPage)],\n  entryComponents: [InvitationsPage]\n})\nexport class InvitationsPageModule { }\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/invitations/invitations.module.ts","import { Component } from '@angular/core';\nimport { NavController, ModalController } from 'ionic-angular';\nimport { DatabaseProvider } from './../../providers/database/database';\nimport { IonicPage } from 'ionic-angular';\nimport { AuthService } from '../../providers/auth-service/auth-service';\nimport { SocketProvider } from '../../providers/socket/socket';\n//import { NewGroupPage } from '../new-group/new-group';\n\n@IonicPage()\n@Component({\n  selector: 'page-invitations',\n  templateUrl: 'invitations.html'\n})\nexport class InvitationsPage {\n  member = {email: '', name: '', privilege: '', score: ''};\n  members = []; //members for the selected group\n  group = \"\";  //selected group\n  groupID =\"\"; //selected group\n  groupName=\"\" //selected group\n  groups = []; //groups which current user is part of\n  adminGroups = []; //groups which current user is admin\n  me = ''; //my username which is an email address\n \n  constructor(private auth: AuthService, public WS: SocketProvider, public modalCtrl: ModalController, public navCtrl: NavController, private databaseprovider: DatabaseProvider) {\n    this.me = this.auth.getUserInfo().email;\nalert('current user: ' + this.me);\n  //this.databaseprovider.getDatabaseState().subscribe(rdy => {\n    this.databaseprovider.prefillDB().subscribe(rdy => {\n    if (rdy) { //\n        //alert('user INFO: '+ this.me);\n        this.loadMemberData();\n      } else {\n\t alert(\"DB not ready\");\n        this.loadMemberData();\n      }\n    })\n  }\n \n  loadMemberData() {\n    // alert(\"loading member data\");\n    this.databaseprovider.getAllMembers(this.groupID).then(data => {\n      this.members = data;\n       alert('members for group ' + this.groupID + ': ' + data);\n    });\n\n    this.databaseprovider.getAllGroups(this.me).then(data => {\n      this.groups = data;\n       alert('groups for: ' + this.me + ' ::: ' + data);\n    });\n\n    this.databaseprovider.getAdminGroups(this.me).then(data => {\n      this.adminGroups = data;\n       alert('admin groups for: ' + this.me + ' ::: ' + data);\n    });\n  }\n \n  addMember() {\n    this.databaseprovider.addMember(this.member['groupID'], this.member['groupName'], this.member['email'], this.member['name'], this.member['privilege'], parseInt(this.member['score']))\n    .then(data => {\n      this.loadMemberData();\n    });\n    //this.member = {};\n  }\n\n  selectGroup() {\n    this.groupID = this.group.replace(/^.* /,\"\");\n    this.groupName = this.group.replace(/(^.* ).*/,\"$1\");\n    if ( /^\\ADDnew/.test(this.groupName) ) {\n      let modal = this.modalCtrl.create('NewGroupPage');\n      modal.present();\n    } else {\n      alert(this.groupName + ' has been selected -- GROUPID: ' + this.groupID);\n      this.databaseprovider.getAllMembers(this.groupID).then(data => {\n        this.members = data;\n         alert('members for group ' + this.groupID + ': ' + data);\n      });\n\n    }\n  };\n\n  editGroup() {\n      let modal = this.modalCtrl.create('EditGroupPage');\n      modal.present();\n  }\n\n  sendInvite() {\n    let invite = {\n      FROM: this.me,\n      FOR: this.member.email,\n      GROUP: this.groupID\n    }\n    this.WS.send('invite', invite);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/invitations/invitations.ts"],"sourceRoot":""}