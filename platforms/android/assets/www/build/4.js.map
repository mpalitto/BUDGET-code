{"version":3,"sources":["../../src/pages/invitations/invitations.module.ts","../../src/pages/invitations/invitations.ts"],"names":[],"mappings":"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","file":"4.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { InvitationsPage } from './invitations';\n@NgModule({\n  declarations: [InvitationsPage],\n  imports: [IonicPageModule.forChild(InvitationsPage)],\n  entryComponents: [InvitationsPage]\n})\nexport class InvitationsPageModule { }\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/invitations/invitations.module.ts","import { Component } from '@angular/core';\nimport { Events, NavController, ModalController } from 'ionic-angular';\nimport { IonicPage } from 'ionic-angular';\nimport { MainHubProvider } from './../../providers/main-hub/main-hub';\n\n@IonicPage()\n@Component({\n  selector: 'page-invitations',\n  templateUrl: 'invitations.html'\n})\nexport class InvitationsPage {\n  newMember = {groupID: '', groupName: '', email: '', name: '', privilege: '', score: ''};\n  members = []; //members for the selected group\n  group = \"\";  //selected group\n  groupID =\"\"; //selected group\n  groupName=\"\" //selected group\n  groups = []; //groups which current user is part of\n  adminGroups = []; //groups which current user is admin\n  me = {nick: '', email: ''}; //my username and email address\n  amIadmin = false; //selected group\n \n  constructor(private events: Events, public modalCtrl: ModalController, public navCtrl: NavController, private mainHUB: MainHubProvider) {\n    this.events.subscribe('userInfo', (nick, email) => {\n      this.me.nick = nick;\n      this.me.email = email;\n    });\n    this.events.subscribe('change-group', (groupID, groupName, amIadmin) => {\n      this.groupID = groupID;\n      this.groupName = groupName;\n      this.amIadmin = amIadmin;\n      this.loadGroupMembers();\n    });\n    this.events.publish('tab2opened');\n    this.mainHUB.prefillDB().subscribe(rdy => {\n        this.loadGroupMembers();\n    });\n  }\n \n  loadGroupMembers() {\n    this.mainHUB.getAllMembers(this.groupID).then(data => {\n      this.members = data;\n       // alert('members for group ' + this.groupID + ': ' + data);\n    });\n  }\n \n  addMember() {\n    this.mainHUB.addMember(this.newMember['groupID'], this.newMember['groupName'], this.newMember['email'], this.newMember['name'], this.newMember['privilege'], parseInt(this.newMember['score']))\n    .then(data => {\n      this.loadGroupMembers();\n    });\n    this.newMember = {groupID: '', groupName: '', email: '', name: '', privilege: '', score: ''};\n  }\n\n  editGroup(gn) {\n      let modal = this.modalCtrl.create('EditGroupPage', {groupName: gn});\n      modal.onDidDismiss(data => {\n        // alert(JSON.stringify(data)); alert('NEW NAME: '+data.newName);\n\n        // UPDATE\n        if (data.button === 'update') {\n          this.mainHUB.updateGroupName(this.groupID, data.newName).then(newName => { \n            alert(this.groupName+' has been RENAMED to: '+ newName); \n            this.loadGroupMembers();\n            this.groupName = newName;\n            this.events.publish('grpUpdated', this.groupID, this.groupName);\n          });\n\n        // ADD NEW GROUP\n        } else if (data.button === 'create') {\n          this.groupName = data.newName;\n          this.groupID = this.me.email + '-' + data.newName.replace(/ /g,'-');\n          // alert('new groupID: '+ this.groupID);\n          this.events.publish('newGrpAdded', this.groupID, this.groupName);\n          this.newMember['groupID'] = this.groupID;\n          this.newMember['groupName'] = data.newName;\n          this.newMember['name'] = this.me.nick;\n          this.newMember['email'] = this.me.email;\n          this.newMember['privilege'] = 'admin';\n          this.newMember['score'] = '6';\n          this.addMember();\n          // alert(JSON.stringify(this.newMember));\n        };\n      });\n      modal.present();\n  }\n\n  sendInvite() {\n    let invite = {\n      FROM: this.me.email,\n      FOR: this.newMember.email,\n      GROUP: this.groupID\n    }\n    this.mainHUB.send('invite', invite);\n  }\n\n  showInvites() {\n    alert('this selection will show all invites history');\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/invitations/invitations.ts"],"sourceRoot":""}